const _0x5af0=['../utils/mailer','deleteEmailCode','Username\x20does\x20not\x20exist','updateUser','expirationDate','hash','verifyUser','30d','insertUser','getLoggedUser','compare','Expired\x20verification\x20code','createUser','Email\x20not\x20verified','verified','bcrypt','Password\x20does\x20not\x20match','jsonwebtoken','password','getFirstEmailCodeByUserId','toUpperCase','logicDeleteUser','Invalid\x20verification\x20code','User\x20email\x20','verifyUserEmail','\x20not\x20found','resendUserVerificationEmail','deleteUser','getUserByEmail','now','JWT_SECRET','getUserPublicInfoById','code','../errors/errors'];(function(_0x2653a1,_0x5af015){const _0x32d0d5=function(_0x11bb2c){while(--_0x11bb2c){_0x2653a1['push'](_0x2653a1['shift']());}};_0x32d0d5(++_0x5af015);}(_0x5af0,0x71));const _0x32d0=function(_0x2653a1,_0x5af015){_0x2653a1=_0x2653a1-0x0;let _0x32d0d5=_0x5af0[_0x2653a1];return _0x32d0d5;};const _0x44246f=_0x32d0;'use strict';const bcrypt=require(_0x44246f('0x4')),jwt=require(_0x44246f('0x6')),{sendVerificationEmail}=require(_0x44246f('0x17')),{NotFoundError,InvalidCredentialsError,EmailVerificationError}=require(_0x44246f('0x16')),SALT_ROUNDS=0xa;exports[_0x44246f('0x1')]=async(_0x11bb2c,_0xd3d6f2,_0x448085)=>{const _0x3320a4=_0x44246f;try{const {UserRepository:_0xf6ea88}=_0x11bb2c;_0x448085[_0x3320a4('0x7')]&&(_0x448085[_0x3320a4('0x7')]=await bcrypt[_0x3320a4('0x1c')](_0x448085[_0x3320a4('0x7')],SALT_ROUNDS));let _0x346535=await _0xf6ea88[_0x3320a4('0x1f')](_0x448085);return await sendVerificationEmail(_0xd3d6f2,_0x11bb2c,_0x346535),_0x346535;}catch(_0x386b6a){throw _0x386b6a;}},exports[_0x44246f('0xd')]=async(_0x1406b5,_0x3790cc)=>{const _0x10dbd2=_0x44246f;try{const {UserRepository:_0x102daa,EmailCodeRepository:_0x10929c}=_0x1406b5,{email:_0x3f5276,code:_0x566b5d}=_0x3790cc,_0xd5c0f8=await _0x102daa['getUserByEmail'](_0x3f5276);if(!_0xd5c0f8)throw new NotFoundError([_0x10dbd2('0xc')+_0x3f5276+_0x10dbd2('0xe')]);if(_0xd5c0f8[_0x10dbd2('0x3')])return;const _0x3c5cb6=await _0x10929c[_0x10dbd2('0x8')](_0xd5c0f8['id']);if(new Date(_0x3c5cb6[_0x10dbd2('0x1b')])>new Date()){if(_0x566b5d['toUpperCase']()===_0x3c5cb6[_0x10dbd2('0x15')][_0x10dbd2('0x9')]()){_0xd5c0f8[_0x10dbd2('0x3')]=!![],await _0x102daa[_0x10dbd2('0x1d')](_0xd5c0f8['id']),await _0x10929c[_0x10dbd2('0x18')](_0xd5c0f8['id']);return;}else throw new EmailVerificationError([_0x10dbd2('0xb')]);}else throw new EmailVerificationError([_0x10dbd2('0x0')]);}catch(_0x114f9d){throw _0x114f9d;}},exports[_0x44246f('0xf')]=async(_0x2a3310,_0x9903ec,_0x3f06a4)=>{const _0x1c6a6c=_0x44246f;try{const {UserRepository:_0x11e18a,EmailCodeRepository:_0x58b3ce}=_0x2a3310,{email:_0xf126c}=_0x3f06a4,_0x5cae08=await _0x11e18a[_0x1c6a6c('0x11')](_0xf126c);if(!_0x5cae08)throw new NotFoundError([_0x1c6a6c('0xc')+_0xf126c+_0x1c6a6c('0xe')]);await _0x58b3ce[_0x1c6a6c('0x18')](_0x5cae08['id']),await sendVerificationEmail(_0x9903ec,_0x2a3310,_0x5cae08);}catch(_0x2ba262){throw _0x2ba262;}},exports[_0x44246f('0x10')]=async(_0x1848c3,_0x3d1df5)=>{const _0x9d605d=_0x44246f;try{const {UserRepository:_0x91048c}=_0x1848c3;return await _0x91048c[_0x9d605d('0xa')](_0x3d1df5['id']);}catch(_0x5eedc6){throw _0x5eedc6;}},exports['getUserById']=async(_0x2bade9,_0x3ee0bc)=>{const _0x147066=_0x44246f;try{const {UserRepository:_0x410ae4}=_0x2bade9;let _0x3261d6=await _0x410ae4[_0x147066('0x14')](_0x3ee0bc);if(!_0x3261d6)throw new NotFoundError(['User\x20id\x20'+_0x3ee0bc+_0x147066('0xe')]);return _0x3261d6;}catch(_0x5e6075){throw _0x5e6075;}},exports[_0x44246f('0x20')]=async(_0x1da768,_0x53eda9)=>{const _0x362f63=_0x44246f;try{const {UserRepository:_0x39d43e}=_0x1da768;let _0x5ab5ac=await _0x39d43e[_0x362f63('0x14')](_0x53eda9);if(!_0x5ab5ac)throw new NotFoundError(['User\x20id\x20'+_0x53eda9+_0x362f63('0xe')]);return _0x5ab5ac;}catch(_0x33e857){throw _0x33e857;}},exports['loginUser']=async(_0x42a1a2,_0x2c8d57)=>{const _0x3190be=_0x44246f;try{const {UserRepository:_0x1618fd,LoggedWhitelistRepository:_0x2a1e93}=_0x42a1a2,{username:_0x4bbe50,password:_0x378fdf}=_0x2c8d57;let _0x7a5466=await _0x1618fd['getUserByUsername'](_0x4bbe50);if(!_0x7a5466)throw new InvalidCredentialsError([_0x3190be('0x19')]);const _0x5a17c4=await bcrypt[_0x3190be('0x21')](_0x378fdf,_0x7a5466[_0x3190be('0x7')]);if(!_0x5a17c4)throw new InvalidCredentialsError([_0x3190be('0x5')]);if(!_0x7a5466[_0x3190be('0x3')])throw new EmailVerificationError([_0x3190be('0x2')]);const _0x366cb2=Date[_0x3190be('0x12')](),_0x11f6a2=jwt['sign']({'sub':_0x7a5466['id'],'iat':_0x366cb2},process['env'][_0x3190be('0x13')],{'expiresIn':_0x3190be('0x1e')});return await _0x2a1e93['insertLoggedUser']({'userId':_0x7a5466['id'],'iat':_0x366cb2}),{'token':_0x11f6a2};}catch(_0x4d77c3){throw _0x4d77c3;}},exports['logoutUser']=async(_0x4bd440,_0x44b4e0,_0x27fdd1)=>{try{const {LoggedWhitelistRepository:_0x312a03}=_0x4bd440;await _0x312a03['deleteLoggedUser']({'userId':_0x44b4e0,'iat':_0x27fdd1});}catch(_0xe1e996){throw _0xe1e996;}},exports['updateUser']=async(_0x5e3287,_0x210dd3,_0x5aa667)=>{const _0x46ee11=_0x44246f;try{const {UserRepository:_0x2726ae}=_0x5e3287;return await _0x2726ae[_0x46ee11('0x1a')](_0x210dd3['id'],_0x5aa667);}catch(_0x52aaa4){throw _0x52aaa4;}};